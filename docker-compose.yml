name: my-sample-app

services:
  back-end:
    container_name: back-end
    build:
      context: ./back-end
      target: development
    restart: unless-stopped
    env_file: ./back-end/.env
    volumes:
      - ./back-end:/usr/src/dev
      - /usr/src/dev/node_modules
    networks:
      - my-sample-app-network
    depends_on:
      - mongo-db
    environment:
      - CHOKIDAR_USEPOLLING=true

  front-end:
    container_name: front-end
    build:
      context: ./front-end
      target: development
    restart: unless-stopped
    env_file: ./front-end/.env
    volumes:
      - ./front-end:/usr/src/dev
      - /usr/src/dev/node_modules
    networks:
      - my-sample-app-network
    depends_on:
      - back-end

  mongo-db:
    container_name: mongo-db
    image: mongo:latest
    ports: # only for development
      - 27018:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - my-sample-app-network
    command: mongod --quiet --logpath /dev/null
    
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - my-sample-app-network
    depends_on:
      - front-end
      - back-end

volumes:
  mongo_data:

networks:
  my-sample-app-network:
    driver: bridge
# docker compose -f docker-compose.yml up --build
